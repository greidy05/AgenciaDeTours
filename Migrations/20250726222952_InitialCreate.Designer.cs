// <auto-generated />
using System;
using AgenciaDeTours.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgenciaDeTours.Migrations
{
    [DbContext(typeof(AgenciaToursContext))]
    [Migration("20250726222952_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgenciaDeTours.Models.Destino", b =>
                {
                    b.Property<int>("DestinoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DestinoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DestinoId"));

                    b.Property<string>("Actividades")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AtractivoPrincipal")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Clima")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DuracionDias")
                        .HasColumnType("int");

                    b.Property<int>("DuracionHoras")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int")
                        .HasColumnName("PaisID");

                    b.Property<string>("TipoDestino")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DestinoId")
                        .HasName("PK__Destino__4A838EF681BB0B48");

                    b.HasIndex("PaisId");

                    b.ToTable("Destino", (string)null);
                });

            modelBuilder.Entity("AgenciaDeTours.Models.Pai", b =>
                {
                    b.Property<int>("PaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaisID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaisId"));

                    b.Property<string>("CodigoIso")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("CodigoISO");

                    b.Property<string>("Continente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IdiomaOficial")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Moneda")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PaisId")
                        .HasName("PK__Pais__B501E1A532094361");

                    b.HasIndex("CodigoIso")
                        .IsUnique()
                        .HasDatabaseName("IX_Pais_CodigoIso_Unique");

                    b.HasIndex(new[] { "CodigoIso" }, "IX_Pais_CodigoIso_Unique")
                        .IsUnique();

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("AgenciaDeTours.Models.Tour", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TourID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourId"));

                    b.Property<int>("DestinoId")
                        .HasColumnType("int")
                        .HasColumnName("DestinoID");

                    b.Property<int?>("DuracionTotalHoras")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComputedColumnSql("(case when [FechaHoraFin]>=getdate() then 'Vigente' else 'No Vigente' end)", false);

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaHoraFin")
                        .HasColumnType("datetime");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time");

                    b.Property<decimal?>("Itbis")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("numeric(13, 4)")
                        .HasColumnName("ITBIS")
                        .HasComputedColumnSql("([Precio]*(0.18))", true);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int")
                        .HasColumnName("PaisID");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("TourId")
                        .HasName("PK__Tour__604CEA101A086580");

                    b.HasIndex("DestinoId");

                    b.HasIndex("PaisId");

                    b.ToTable("Tour", (string)null);
                });

            modelBuilder.Entity("AgenciaDeTours.Models.Destino", b =>
                {
                    b.HasOne("AgenciaDeTours.Models.Pai", "Pais")
                        .WithMany("Destinos")
                        .HasForeignKey("PaisId")
                        .IsRequired()
                        .HasConstraintName("FK__Destino__PaisID__398D8EEE");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("AgenciaDeTours.Models.Tour", b =>
                {
                    b.HasOne("AgenciaDeTours.Models.Destino", "Destino")
                        .WithMany("Tours")
                        .HasForeignKey("DestinoId")
                        .IsRequired()
                        .HasConstraintName("FK__Tour__DestinoID__3D5E1FD2");

                    b.HasOne("AgenciaDeTours.Models.Pai", "Pais")
                        .WithMany("Tours")
                        .HasForeignKey("PaisId")
                        .IsRequired()
                        .HasConstraintName("FK__Tour__PaisID__3C69FB99");

                    b.Navigation("Destino");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("AgenciaDeTours.Models.Destino", b =>
                {
                    b.Navigation("Tours");
                });

            modelBuilder.Entity("AgenciaDeTours.Models.Pai", b =>
                {
                    b.Navigation("Destinos");

                    b.Navigation("Tours");
                });
#pragma warning restore 612, 618
        }
    }
}
